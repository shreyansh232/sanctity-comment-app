// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int            @id @default(autoincrement())
  username     String         @unique
  password     String
  createdAt    DateTime       @default(now()) @map("created_at")
  comments     Comment[]
  Notification Notification[]

  @@map("users")
}

model Comment {
  id           Int            @id @default(autoincrement())
  content      String
  createdAt    DateTime       @default(now()) @map("created_at")
  editedAt     DateTime?      @map("edited_at")
  parentId     Int?           @map("parent_id")
  isDeleted    Boolean        @default(false) @map("is_deleted")
  userId       Int
  user         User           @relation(fields: [userId], references: [id])
  deletedAt    DateTime?      @map("deleted_at")
  Notification Notification[]

  @@map("comments")
}

model Notification {
  id        Int      @id @default(autoincrement())
  message   String
  userId    Int      @map("user_id") // The user who receives the notification
  user      User     @relation(fields: [userId], references: [id])
  commentId Int      @map("comment_id") // The comment that triggered the notification
  comment   Comment  @relation(fields: [commentId], references: [id])
  isRead    Boolean  @default(false) @map("is_read")
  createdAt DateTime @default(now()) @map("created_at")

  @@map("notifications")
}
